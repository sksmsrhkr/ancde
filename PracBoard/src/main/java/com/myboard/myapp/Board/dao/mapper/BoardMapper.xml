<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper
  	namespace="com.myboard.myapp.Board.dao.face.BoardDao">
  	
  	<select id="getTotalPaging" resultType="int" >
  		SELECT count(*) FROM board
  	</select>
  	
  	<select id="selectBoardList" resultType="Board" parameterType="int">
  		SELECT * FROM
  		(SELECT rownum rnum , B.* FROM 
  		(SELECT * FROM board ORDER BY board_no DESC) B
  		)WHERE rnum BETWEEN #{startNo} AND #{endNo}
  	</select>
  	
  	<select id="getBoard" resultType="Board" parameterType="int" >
		select * from(        
		SELECT B.*,
		Lag(board_no, 1, 0) over(order by board_no) as prev_no,
		LAG(title, 1, '이전 글이 없습니다.') over(order by board_no) as prev_title,
		Lead(board_no, 1, 0) over(order by board_no) as next_no,
		Lead(title, 1, '다음 글이 없습니다.') over(order by board_no) as next_title
		from board B)
		where board_no = #{boardNo}
  	</select>
  	
  	<select id="isRecommend" resultType="int" parameterType="BoardRecommend">
  		SELECT count(*) FROM board_recommend WHERE user_no = #{userNo} AND board_no = #{boardNo}
  	</select>
  	
  	<insert id="insertRecommend" parameterType="BoardRecommend">
  		INSERT INTO board_recommend VALUES (#{userNo}, #{boardNo})
  	</insert>
  	
  	<delete id="deleteRecommend" parameterType="BoardRecommend">
  		DELETE FROM board_recommend WHERE user_no = #{userNo} AND board_no = #{boardNo}
  	</delete>
  	
  	<select id="getCntRecommend" parameterType="int" resultType="int">
  		SELECT count(*) FROM board_recommend WHERE board_no = #{boardNo}
  	</select>
  	
  	<select id="getWriterInfo" parameterType="int" resultType="User">
  		SELECT user_nick FROM user_tb WHERE user_no = #{userNo}
  	</select>
  	
  	<insert id="insertBoard" parameterType="Board">
  		INSERT into board( board_no, title, content, hit, user_no )
  		VALUES
  		(board_no_seq.nextval
  		,#{title}
  		,#{content}
  		,0
  		,#{userNo}) 
  	</insert>
  	
  	<update id="insertHit" parameterType="int">
  		UPDATE board SET hit = hit+1 WHERE board_no = #{boardNo}
  	</update>
  	
  	<insert id="insertComment" parameterType="BoardComment">
  		<selectKey order="BEFORE" resultType="int"
			keyProperty="commentNo">
			SELECT board_comment_no_seq.nextval FROM dual
		</selectKey>
  		INSERT INTO 
  		board_comment (comment_no, comm_content, board_no, user_no, chk_lock)
  		VALUES
  		( #{commentNo}
  		, #{commContent}
  		, #{boardNo}
  		, #{userNo}
  		, #{chkLock}
  		)
  	</insert>
  	
  	<select id="getCommentList" parameterType="int" resultType="Map">
        SELECT  U.user_nick, F.comfile_stored, C.*
        FROM    user_tb U, commentfile F, board_comment C 
		WHERE   C.board_no = #{boardNo}
        AND U.user_no = C.user_no(+)
        AND C.comment_no = F.comment_no(+)
	    start with C.step = 0
	    connect by prior C.comment_no = C.parent_no
  	</select>
  	
  	<select id="getCntComment" parameterType="int" resultType="int">
  		SELECT count(*) FROM board_comment WHERE board_no = #{boardNo}
  	</select>
  	
  	<delete id="deleteComment" parameterType="BoardComment">
  		DELETE FROM board_comment WHERE board_no = #{boardNo} AND comment_no = #{commentNo}
  	</delete>
  	
  	<insert id="insertCommFile" parameterType="CommentFile">
  		INSERT INTO commentfile 
  		(comment_no, board_no, comfile_no, comfile_origin, comfile_stored)
  		VALUES
  		( #{commentNo},
  		  #{boardNo},
  		  commentfile_no_seq.nextval,
  		  #{comfileOrigin},
  		  #{comfileStored}
  		)
  	</insert>
  	
  	<select id="getCommImg" parameterType="int" resultType="CommentFile">
  		SELECT * FROM commentfile WHERE comment_no = #{commentNo}
  	</select>
  	
  	 <select id="selectList" resultType="Map" parameterType="Map">
  		SELECT * FROM
  		(SELECT rownum rnum , L.* FROM(
        SELECT b.* 
        , (SELECT count(*) FROM  board_recommend br WHERE br.board_no = b.board_no
        ) recommendCnt
        , (SELECT count(*) FROM board_comment bc WHERE bc.board_no = b.board_no) commentCnt
        , u.user_nick
        FROM board b
        INNER JOIN user_tb u ON b.user_no = u.user_no
  		ORDER BY b.board_no DESC
        ) L
  		)WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
  	</select>
  	
  	<update id="updateCommContent" parameterType="BoardComment">
  		UPDATE board_comment SET comm_content = #{commContent}, chk_lock = #{chkLock} WHERE comment_no = #{commentNo}
  	</update>
  	
  	<delete id="deleteCommFile" parameterType="BoardComment">
  		DELETE FROM commentfile WHERE comment_no = #{commentNo}
  	</delete>
  	
  	<delete id="deleteImgFile" parameterType="int">
  		DELETE FROM commentfile WHERE comment_no = #{commentNo}
  	</delete>
  	
  	<insert id="insertReply" parameterType="BoardComment">
  		 <selectKey order="BEFORE" resultType="int"
			keyProperty="commentNo">
			SELECT board_comment_no_seq.nextval FROM dual
		</selectKey>
  		INSERT INTO 
  		board_comment (comment_no, comm_content, board_no, user_no, chk_lock, step, parent_no, reply_no, reply_nick)
  		VALUES
  		( #{commentNo}
  		, #{commContent}
  		, #{boardNo}
  		, #{userNo}
  		, #{chkLock}
  		, #{step}
  		, #{parentNo}
  		, #{replyNo}
  		, #{replyNick}
  		)
  	</insert>
  	
  	<update id="updateBoard" parameterType="Board">
  		UPDATE board SET title= #{title}, content= #{content} WHERE board_no= #{boardNo}
  	</update>
  	
  	<delete id="deleteBoard" parameterType="int">
  		DELETE FROM board WHERE board_no = #{boardNo}
  	</delete>
  	
  </mapper>