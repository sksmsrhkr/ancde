<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper
  	namespace="com.myboard.myapp.admin.dao.face.AdminDao">
  	
  	<select id="cntAdminByIdPw" parameterType="Admin" resultType="int">
  		SELECT count(*) FROM admin_tb WHERE admin_id = #{adminId} AND admin_pw = #{adminPw}
  	</select>
  	
  	<select id="getAdminNo" resultType="int">
  		SELECT admin_no FROM admin_tb
  	</select>
  	
  	<select id="getCntReport" resultType="int">
  		SELECT count(*)
		FROM board_comment b, report_comment r 
		WHERE b.comment_no = r.comment_no 
  		
  		<if test="!keyword.equals('') or keyword != null">
  			AND r.comment_no || r.board_no || b.user_no || b.comm_content LIKE '%' || #{keyword} || '%'
  		</if>
  		
  		<choose>
			<when test='filter.equalsIgnoreCase("bRel")'>
				AND comment_blind = 'n'
			</when>
			<when test='filter.equalsIgnoreCase("aRel")'>
				AND comment_blind = 'y'
			</when>
			<otherwise>
			</otherwise>
		</choose>
  	</select>
  	
  	<select id="getRegulateList" parameterType="Paging" resultType="Map">
	  	SELECT * FROM
		(SELECT rownum rnum , R.* from
		(SELECT r.*, b.comm_content, b.user_no rno,
			CASE reason_choice
			WHEN 'a' THEN '욕설, 비방, 차별, 혐오'
			WHEN 'b' THEN '홍보, 영리 목적	'
			WHEN 'c' THEN '불법 정보'
			WHEN 'd' THEN '음란, 청소년 유해'
			WHEN 'e' THEN '개인 정보 노출, 유포, 거래'
			WHEN 'f' THEN '도배, 스팸'
			ELSE '기타'
			END case
		 	FROM board_comment b, report_comment r where b.comment_no = r.comment_no 
		 	
			<if test="!keyword.equals('') or keyword != null">
	  			AND r.comment_no || r.board_no || b.user_no || b.comm_content LIKE '%' || #{keyword} || '%'
	  		</if>
		 	
			<choose>
				<when test='filter.equalsIgnoreCase("bRel")'>
					AND comment_blind = 'n'
					ORDER BY report_no DESC
				</when>
				<when test='filter.equalsIgnoreCase("aRel")'>
					AND comment_blind = 'y'
					ORDER BY report_no DESC
				</when>
				<when test='filter.equalsIgnoreCase("relCnt")'>
					ORDER BY r.report_cnt DESC
				</when>
				<otherwise>
					ORDER BY report_no DESC
				</otherwise>
			</choose>
		) R
		) WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
  	</select>
  	
  	<update id="regulateComm" parameterType="int">
  		UPDATE report_comment SET comment_blind = 'y' WHERE comment_no = #{commentNo}
  	</update>
  	
  	<delete id="deleteReguComm" parameterType="int">
  		DELETE report_comment WHERE comment_no = #{commentNo}
	</delete>
  	
  	<select id="getQnaCnt" resultType="int">
  		SELECT count(*) FROM inquiry
  		<choose>
  		<when test='filter.equalsIgnoreCase("y")'>
  			WHERE answer_state = 'y'
  		</when>
  		<when test='filter.equalsIgnoreCase("n")'>
  			WHERE answer_state = 'n'
  		</when>
  		<otherwise>
  		</otherwise>
  		</choose>
  	</select>
  	
  	<select id="getQnaList" parameterType="Paging" resultType="Map">
  		SELECT * FROM 
		(SELECT  rownum rnum, q.* from
		(SELECT i.*,
   			CASE inquiry_type
			WHEN 'u' THEN '회원정보'
			WHEN 'b' THEN '블랙리스트	'
			WHEN 'r' THEN '규제'
			ELSE '기타'
			END type,
			
			CASE answer_state
            WHEN 'n' THEN '답변대기'
            ELSE '답변완료'
            END state
            
            FROM inquiry i) q
            
        <choose>
	  		<when test='filter.equalsIgnoreCase("y")'>
	  			WHERE answer_state = 'y'
	  		</when>
	  		<when test='filter.equalsIgnoreCase("n")'>
	  			WHERE answer_state = 'n'
	  		</when>
	  		<otherwise>
	  		</otherwise>
  		</choose>
  			ORDER BY inquiry_no DESC
		) 
		WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
  	</select>
  	
  	<select id="getReboardCnt" parameterType="String" resultType="int">
  		SELECT count(*)
		FROM board b, report_board r 
		WHERE b.board_no = r.board_no 
  		
  		<if test="!keyword.equals('') or keyword != null">
  			AND r.board_no || b.user_no || b.title || b.content LIKE '%' || #{keyword} || '%'
  		</if>
  		
  		<choose>
			<when test='filter.equalsIgnoreCase("bRel")'>
				AND board_blind = 'n'
			</when>
			<when test='filter.equalsIgnoreCase("aRel")'>
				AND board_blind = 'y'
			</when>
			<otherwise>
			</otherwise>
		</choose>
  	</select>
  	
  	<select id="getReBoardList"  parameterType="Paging" resultType="Map">
  		 SELECT * FROM
		(SELECT rownum rnum , R.* from
		(SELECT r.*, b.title, b.user_no rno,
			CASE reason_choice
			WHEN 'a' THEN '욕설, 비방, 차별, 혐오'
			WHEN 'b' THEN '홍보, 영리 목적	'
			WHEN 'c' THEN '불법 정보'
			WHEN 'd' THEN '음란, 청소년 유해'
			WHEN 'e' THEN '개인 정보 노출, 유포, 거래'
			WHEN 'f' THEN '도배, 스팸'
			ELSE '기타'
			END case
		 	FROM board b, report_board r where b.board_no = r.board_no 
		 	
			<if test="!keyword.equals('') or keyword != null">
	  			AND r.board_no || b.user_no || b.title || b.content LIKE '%' || #{keyword} || '%'
	  		</if>
		 	
			<choose>
				<when test='filter.equalsIgnoreCase("bRel")'>
					AND board_blind = 'n'
					ORDER BY report_bno DESC
				</when>
				<when test='filter.equalsIgnoreCase("aRel")'>
					AND board_blind = 'y'
					ORDER BY r.report_cnt DESC, r.board_no
				</when>
				<when test='filter.equalsIgnoreCase("relCnt")'>
					ORDER BY r.report_cnt DESC, r.board_no
				</when>
				<otherwise>
					ORDER BY report_bno DESC
				</otherwise>
			</choose>
		) R
		) WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
  	</select>
  	
  	<select id="getUserTotalCnt" parameterType="Map" resultType="int">
  		SELECT count(*) FROM user_tb
	  		<if test='searchType.equals("no")'>
			WHERE user_no LIKE '%'|| #{keyword} || '%'
			</if>
	  		<if test='searchType.equals("nick")'>
			WHERE user_nick LIKE '%'|| #{keyword} || '%'
			</if>
	  		<if test='searchType.equals("id")'>
			WHERE user_id LIKE '%'|| #{keyword} || '%'
			</if>
		
				<choose>
				<when test='filter.equalsIgnoreCase("no")'>
					ORDER BY user_no
				</when>
				<when test='filter.equalsIgnoreCase("noDesc")'>
					ORDER BY user_no DESC
				</when>
				<when test='filter.equalsIgnoreCase("join")'>
					ORDER BY user_joindate
				</when>
				<when test='filter.equalsIgnoreCase("joinDesc")'>
					ORDER BY user_joindate DESC
				</when>
				</choose>
  	</select>
  	
  	<select id="getUserList" parameterType="Map" resultType="USER">
 		  	SELECT * FROM
 		  		(SELECT rownum rnum , u.* FROM
 		  			(SELECT * FROM user_tb
		  		<if test='searchType.equals("no")'>
				WHERE user_no LIKE '%'|| #{keyword} || '%'
				</if>
		  		<if test='searchType.equals("nick")'>
				WHERE user_nick LIKE '%'|| #{keyword} || '%'
				</if>
		  		<if test='searchType.equals("id")'>
				WHERE user_id LIKE '%'|| #{keyword} || '%'
				</if>
				<choose>
				<when test='filter.equalsIgnoreCase("no")'>
					ORDER BY user_no
				</when>
				<when test='filter.equalsIgnoreCase("noDesc")'>
					ORDER BY user_no DESC
				</when>
				<when test='filter.equalsIgnoreCase("join")'>
					ORDER BY user_joindate
				</when>
				<when test='filter.equalsIgnoreCase("joinDesc")'>
					ORDER BY user_joindate DESC
				</when>
				</choose>
				) u
			) WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
  	</select>
  	
  	<update id="updateUserInfo" parameterType="User">
  		UPDATE user_tb SET
  		user_name = #{userName},
  		user_id = #{userId},
  		user_email = #{userEmail},
  		user_phone = #{userPhone},
  		user_gender = #{userGender}
  		WHERE user_no = #{userNo}
  	</update>
  	
  	<select id="getBlackBoardCnt" parameterType="Map" resultType="int">
  	    SELECT count(*) FROM       
        (SELECT DISTINCT rb.board_no, rb.report_cnt, b.user_no, b.title from report_board rb , board b 
        WHERE rb.board_no = b.board_no AND rb.board_blind = 'y'
        	<if test="!keyword.equals('') or keyword != null">
	  			AND rb.board_no || b.user_no || b.title LIKE '%' || #{keyword} || '%'
	  		</if>
        )
  	</select>
  	
  	<select id="getBoardBlackList" resultType="Map" parameterType="Map">
  	   SELECT * FROM
       (SELECT rownum rnum , B.* FROM 
        (SELECT DISTINCT rb.board_no, rb.report_cnt, b.user_no, b.title, bl.black_type  
        ,(SELECT count(*) FROM black_list WHERE user_no = b.user_no) blackCnt
        FROM report_board rb , board b , black_list bl
        WHERE rb.board_no = b.board_no AND rb.board_blind = 'y'
        AND b.user_no = bl.user_no(+)
        	<if test="!keyword.equals('') or keyword != null">
	  			AND rb.board_no || b.user_no || b.title LIKE '%' || #{keyword} || '%'
	  		</if>
       		<choose>
			<when test='filter.equalsIgnoreCase("userNo")'>
				ORDER BY b.user_no
			</when>
			<when test='filter.equalsIgnoreCase("userDesc")'>
				ORDER BY b.user_no DESC
			</when>
			</choose>
        )B 
        ) WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
  	</select>
  	
  	<delete id="deleteBoardRel" parameterType="int">
  		DELETE report_board WHERE board_no = #{boardNo}
  	</delete>
  	
  </mapper>